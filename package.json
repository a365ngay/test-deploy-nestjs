{
  "name": "epic-med-backend",
  "version": "1.2.0",
  "description": "Epic medical from TVF",
  "author": "",
  "license": "MIT",
  "scripts": {
    "build": "nest build",
    "build-old": "tsc -p tsconfig.build.json && npm run copy-static",
    "format": "prettier --write \"src/**/*.ts\"",
    "start": "env $(xargs < .env.local) ts-node -r tsconfig-paths/register src/main.ts",
    "start:dev": "env $(xargs < .env.local) concurrently --handle-input \"wait-on dist/main.js && nodemon\" \"tsc -w -p tsconfig.build.json\" ",
    "start:debug": "nodemon --config nodemon-debug.json",
    "prestart:prod": "rimraf dist && npm run build",
    "start:prod": "node dist/main.js",
    "prod": "node dist/main.js",
    "migration:prod": "typeorm migration:run & npm run prod",
    "lint": "tslint -p tsconfig.json -c tslint.json",
    "test": "npm run restore:database && env $(xargs < .env.test) jest --runInBand",
    "testci": "npm run restore:database && env $(xargs < .env.testci) jest --runInBand",
    "test:watch": "npm run restore:database && env $(xargs < .env.test) jest --runInBand --watch",
    "test:cov": "npm run restore:database && env $(xargs < .env.test) jest --runInBand --coverage",
    "test:debug": "env $(xargs < .env.test) npm run restore:database && node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "npm run restore:database && env $(xargs < .env.test) jest --config ./test/jest-e2e.json --runInBand",
    "testci-e2e": "npm run restore:database && env $(xargs < .env.testci) jest --config ./test/jest-e2e.json --runInBand",
    "test:e2e:watch": "npm run restore:database && env $(xargs < .env.test) jest --config ./test/jest-e2e.json --watch --runInBand",
    "format:staged": "pretty-quick --staged",
    "migration": "npx typeorm migration:run",
    "restore:database": "typeorm schema:drop && typeorm migration:run",
    "copy-static": "cp -R static  dist/",
    "win-build": "nest build",
    "win-migration": "npx typeorm migration:run",
    "win-start": "nest start"
  },
  "dependencies": {
    "@adyen/api-library": "^9.0.0",
    "@hapi/joi": "^15.1.1",
    "@nestjs/cli": "^9.1.5",
    "@nestjs/common": "^9.2.1",
    "@nestjs/core": "^9.2.1",
    "@nestjs/jwt": "^9.0.0",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^9.2.1",
    "@nestjs/platform-socket.io": "^9.2.1",
    "@nestjs/platform-ws": "9.0.0",
    "@nestjs/schedule": "^2.1.0",
    "@nestjs/serve-static": "^3.0.0",
    "@nestjs/swagger": "^6.1.3",
    "@nestjs/typeorm": "^9.0.1",
    "@nestjsx/crud": "^5.0.0-alpha.3",
    "@nestjsx/crud-typeorm": "^5.0.0-alpha.3",
    "@peculiar/webcrypto": "^1.1.7",
    "@types/lodash": "^4.14.170",
    "@types/mjml": "^4.7.0",
    "@types/multer-s3": "^2.7.9",
    "aws-sdk": "^2.938.0",
    "body-parser": "^1.19.0",
    "cache-manager": "^3.4.4",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "compression": "^1.7.4",
    "cron": "^1.8.2",
    "dotenv": "^10.0.0",
    "elastic-apm-node": "^3.16.0",
    "ethers": "^5.4.0",
    "express": "^4.17.1",
    "express-basic-auth": "^1.2.0",
    "express-rate-limit": "^5.3.0",
    "fastify-swagger": "^4.12.2",
    "fcm-node": "^1.3.0",
    "firebase-admin": "^10.0.0",
    "haversine": "^1.1.1",
    "helmet": "^4.6.0",
    "libsodium-wrappers-sumo": "^0.7.9",
    "lodash": "^4.17.21",
    "mjml": "^4.10.1",
    "multer-s3": "^2.9.0",
    "nodemailer": "^6.6.2",
    "npx": "^3.0.0",
    "onesignal-node": "^3.3.0",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pg": "^8.6.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.5.7",
    "spherical-geometry-js": "^3.0.0",
    "swagger-ui-express": "^4.1.6",
    "typeorm": "^0.3.10"
  },
  "devDependencies": {
    "@nestjs/testing": "^9.2.1",
    "@types/dotenv": "^6.1.1",
    "@types/express": "^4.17.12",
    "@types/faker": "^5.5.6",
    "@types/jest": "^26.0.23",
    "@types/joi": "^17.2.2",
    "@types/libsodium-wrappers-sumo": "^0.7.5",
    "@types/node": "^15.14.0",
    "@types/nodemailer": "^6.4.2",
    "@types/supertest": "^2.0.11",
    "concurrently": "^6.2.0",
    "faker": "^5.5.3",
    "husky": "^7.0.0",
    "jest": "^27.0.6",
    "nodemon": "^2.0.9",
    "prettier": "^2.3.2",
    "pretty-quick": "^3.1.1",
    "supertest": "^6.1.3",
    "ts-jest": "27.0.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "3.9.0",
    "tslint": "5.20.1",
    "tslint-config-prettier": "^1.18.0",
    "typescript": "4.3.5",
    "wait-on": "^6.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run format:staged && npm run lint && npm run build"
    }
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
